{"version":3,"file":"ngeth-provider.umd.js.map","sources":["ng://@ngeth/provider/lib/provider.ts","ng://@ngeth/provider/lib/providers.module.ts",null,"ng://@ngeth/provider/lib/providers/ws-provider.ts","ng://@ngeth/provider/lib/subproviders/account.ts","ng://@ngeth/provider/lib/provider.decorator.ts","ng://@ngeth/provider/lib/subproviders/contract.ts","ng://@ngeth/provider/lib/subproviders/eth.ts"],"sourcesContent":["import { Type } from '@angular/core';\r\nimport { RPCReq, RPCRes, RPCSub } from '@ngeth/utils';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\n\r\n// @dynamic\r\nexport class MainProvider {\r\n  static Auth: Type<any>;\r\n  protected sendAsync: <T>(payload: RPCReq) => Observable<RPCRes<T>>;\r\n  protected on: <T>(payload: RPCReq) => Observable<RPCSub<T>>;\r\n  protected rpcId = 0;\r\n  protected web3Provider: any;\r\n  public url: string;\r\n  public id: number;\r\n  public type: 'web3' | 'http' | 'ws';\r\n\r\n  constructor() {}\r\n\r\n  /** JSON RPC Request */\r\n  protected req(method: string, params?: any[]): RPCReq {\r\n    return {\r\n      jsonrpc: '2.0',\r\n      id: this.rpcId,\r\n      method: method,\r\n      params: params || []\r\n    };\r\n  }\r\n\r\n  /** JSON RPC Response */\r\n  protected res<T>(payload: any, result: any): RPCRes<T> {\r\n    return {\r\n      jsonrpc: payload.jsonrpc,\r\n      id: payload.id,\r\n      result: result\r\n    };\r\n  }\r\n\r\n  /** Get the id of the provider : use only at launch */\r\n  public fetchId(): Promise<number> {\r\n    this.rpcId++;\r\n    return this.rpc<number>('net_version').toPromise<number>();\r\n  }\r\n\r\n  /** Send a request to the node */\r\n  public rpc<T>(method: string, params?: any[]): Observable<T> {\r\n    const payload = this.req(method, params);\r\n    return this.sendAsync<T>(payload).pipe(\r\n      tap(console.log),\r\n      map(res => {\r\n        if (res.error) throw res.error;\r\n        return res.result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Send a subscription request to the node */\r\n  public rpcSub<T>(params: any[]): Observable<T> {\r\n    const payload = this.req('eth_subscribe', params);\r\n    return this.on<T>(payload).pipe(\r\n      map(res =>  res.params.result)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  InjectionToken,\r\n  APP_INITIALIZER\r\n} from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MainProvider } from './provider';\r\n\r\nexport const AUTH = new InjectionToken<any>('auth');\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [HttpClientModule]\r\n})\r\nexport class ProvidersModule {\r\n  static forRoot(Provider: typeof MainProvider): ModuleWithProviders {\r\n    return {\r\n      ngModule: ProvidersModule,\r\n      providers: [\r\n        { provide: MainProvider, useExisting: Provider },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: (provider: MainProvider) => {\r\n            return  () => provider.fetchId().then(id => provider.id = id);\r\n          },\r\n          multi: true,\r\n          deps: [MainProvider]\r\n        },\r\n        { provide: AUTH, useClass: Provider.Auth },\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RPCRes, RPCSub, RPCReq } from '@ngeth/utils';\r\nimport { ProvidersModule } from './../providers.module';\r\nimport { w3cwebsocket } from 'websocket';\r\nimport { WebSocketSubject } from 'rxjs/webSocket';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, tap, switchMap, map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: ProvidersModule })\r\nexport class WebsocketProvider {\r\n  private socket$: WebSocketSubject<any>;\r\n  public observables: Observable<RPCSub>[] = [];\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Check if a message is the subscription we want\r\n   * @param msg The message returned by the node\r\n   * @param subscription The subscription to map\r\n   */\r\n  private isSubscription(msg: any, subscription: string): msg is RPCSub {\r\n    return !!msg.method\r\n          && msg.method === 'eth_subscription'\r\n          && msg.params.subscription === subscription;\r\n  }\r\n\r\n  /** Return the response of an RPC Request */\r\n  private response<T>(id: number) {\r\n    return this.socket$.pipe(\r\n      filter((msg: RPCRes<T>) => msg.id === id),\r\n      first()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the node for a specific subscription name\r\n   * @param subscription The subscription name we want to subscribe to\r\n   */\r\n  private subscription<T>(subscription: string): Observable<RPCSub<T>> {\r\n    return this.socket$.pipe(\r\n      filter(msg => this.isSubscription(msg, subscription))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Create a socket between the client and the node\r\n   * @param url The url of the node to connect to\r\n   */\r\n  public create(url: string) {\r\n    this.socket$ = new WebSocketSubject({\r\n      url: url,\r\n      WebSocketCtor: w3cwebsocket as any\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send an RPC request to the node\r\n   * @param payload The RPC request\r\n   */\r\n  public post<T = any>(payload: RPCReq): Observable<RPCRes<T>> {\r\n    this.socket$.next(payload);\r\n    return this.response<T>(payload.id);\r\n  }\r\n\r\n  /**\r\n   * Subscribe to a SUB/PUB\r\n   * @param payload The RPC request\r\n   */\r\n  public subscribe(payload: RPCReq) {\r\n    this.socket$.next(payload);\r\n    return this.response<string>(payload.id).pipe(\r\n      tap(res => { if (res.error) throw res.error; }),\r\n      map(res => res.result),\r\n      switchMap(result => {\r\n        return this.observables[result] = this.subscription(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  // TODO\r\n  public unsubscribe() {\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TxObject, utf8ToHex, BlockTag, toChecksumAddress } from '@ngeth/utils';\r\nimport { ProvidersModule } from './../providers.module';\r\nimport { MainProvider } from '../provider';\r\nimport { Auth } from '../auth';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn : ProvidersModule })\r\nexport class Account implements Auth {\r\n  private currentAccount = new BehaviorSubject<string>(null);\r\n  public account$ = this.currentAccount.asObservable();\r\n\r\n  constructor(private provider: MainProvider) {}\r\n\r\n  /** Get the default account */\r\n  get defaultAccount(): string {\r\n    return this.currentAccount.getValue();\r\n  }\r\n\r\n  /** Set the default account */\r\n  set defaultAccount(account: string) {\r\n    this.currentAccount.next(toChecksumAddress(account));\r\n  }\r\n\r\n  /** Get the list of accounts available on the node */\r\n  public getAccounts(): Observable<string[]> {\r\n    return this.provider.rpc<string[]>('eth_accounts');\r\n  }\r\n\r\n  /**\r\n   * Send a transaction to the node\r\n   * @param tx The transaction to pass to the node\r\n   * @param blockTag The block to target\r\n   */\r\n  public sendTransaction<T>(\r\n    tx: TxObject,\r\n    blockTag: BlockTag = 'latest'\r\n  ): Observable<T> {\r\n    return this.provider.rpc<T>('eth_sendTransaction', [tx, blockTag]);\r\n  }\r\n\r\n  public getBalance(address: string, blockTag?: BlockTag | number) {\r\n    return this.provider.rpc<string>('eth_getBalance', [address, blockTag || 'latest']);\r\n  }\r\n\r\n  public getTransactionCount(address: string, blockTag?: BlockTag | number) {\r\n    return this.provider.rpc<string>('eth_getTransactionCount', [\r\n      address,\r\n      blockTag || 'latest'\r\n    ]);\r\n  }\r\n\r\n  public sign(message: string, address: string,  pwd: string): Observable<string> {\r\n    const msg = utf8ToHex(message);\r\n    const method = this.provider.type === 'web3' ? 'personal_sign' : 'eth_sign';\r\n    const params = this.provider.type === 'web3' ? [address, msg, pwd] : [msg, address];\r\n    return this.provider.rpc<string>(method, params);\r\n  }\r\n}\r\n","import { WebsocketProvider } from './providers/ws-provider';\r\nimport { Injectable, Type } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { bindNodeCallback, Observable } from 'rxjs';\r\n\r\nimport { RPCRes, RPCReq, RPCSub } from '@ngeth/utils';\r\nimport { MainProvider } from './provider';\r\nimport { ProvidersModule } from './providers.module';\r\nimport { Account } from './subproviders/account';\r\n\r\n\r\nexport function Provider(options: {\r\n  url: string;\r\n  auth?: any;\r\n}) {\r\n\r\n  return function(Base: Type<MainProvider>) {\r\n\r\n    @Injectable({ providedIn: ProvidersModule })\r\n    class DecoratedProvider extends MainProvider {\r\n      public static Auth = options.auth || Account;\r\n      public sendAsync: <T>(payload: RPCReq) => Observable<RPCRes<T>>;\r\n      public on: <T>(payload: RPCReq) => Observable<RPCSub<T>>;\r\n\r\n      constructor(\r\n        private http: HttpClient,\r\n        private ws: WebsocketProvider\r\n      ) {\r\n        super();\r\n        this.url = options.url || 'localhost:8545';\r\n        const protocol = new URL(this.url).protocol;\r\n        const isWS = protocol === 'ws:' || protocol === 'wss:';\r\n\r\n        if (window && 'web3' in window) {\r\n          this.type = 'web3';\r\n          this.setWeb3Provider();\r\n        } else if (isWS) {\r\n          this.type = 'ws';\r\n          this.setWsProvider();\r\n        } else {\r\n          this.type = 'http';\r\n          this.setHttpProvider();\r\n        }\r\n\r\n      }\r\n\r\n      /** Connect to a web3 instance inside the page if any */\r\n      private setWeb3Provider() {\r\n        this.web3Provider = window['web3'].currentProvider;\r\n        this.sendAsync = (payload) => {\r\n          const sendAsync = this.web3Provider.sendAsync.bind(this.web3Provider, payload);\r\n          return bindNodeCallback<any>(sendAsync)();\r\n        }\r\n      }\r\n\r\n      /** Setup a Websocket connection with the node */\r\n      private setWsProvider() {\r\n        this.ws.create(this.url);\r\n        this.on = (payload) => {\r\n          this.rpcId ++;\r\n          return this.ws.subscribe(payload);\r\n        }\r\n        this.sendAsync = (payload) => {\r\n          this.rpcId ++;\r\n          return this.ws.post(payload);\r\n        }\r\n      }\r\n\r\n      /** Setup an HTTP connection with the node */\r\n      private setHttpProvider() {\r\n        this.sendAsync = (payload) => {\r\n          this.rpcId ++;\r\n          return this.http.post<RPCRes<any>>(this.url, payload);\r\n        }\r\n      }\r\n    }\r\n    return DecoratedProvider as any;\r\n  };\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { BlockTag, TxLogs, ITxObject, TxObject, hexToNumber, hexToNumberString } from '@ngeth/utils';\r\nimport { ProvidersModule, AUTH } from '../providers.module';\r\nimport { Auth } from './../auth';\r\nimport { MainProvider } from './../provider';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn : ProvidersModule })\r\nexport class ContractProvider {\r\n  private currentTx = new BehaviorSubject<Partial<ITxObject>>(null);\r\n  public tx$ = this.currentTx.asObservable();\r\n  public id: number;\r\n\r\n  constructor(@Inject(AUTH) private auth: Auth, private provider: MainProvider) {\r\n    this.auth.account$\r\n        .subscribe(from => this.defaultTx = { ...this.defaultTx, from });\r\n    this.id = this.provider.id;\r\n  }\r\n\r\n  get defaultTx(): Partial<ITxObject> {\r\n    return this.currentTx.getValue();\r\n  }\r\n\r\n  set defaultTx(transaction: Partial<ITxObject>) {\r\n    const tx = {...this.currentTx.getValue(), ...transaction };\r\n    this.currentTx.next(tx);\r\n  }\r\n\r\n  /**\r\n   * Make a call to the node\r\n   * @param to The address of the contract to contact\r\n   * @param data The data of the call as bytecode\r\n   * @param blockTag The block to target\r\n   */\r\n  public call<T>(\r\n    to: string,\r\n    data: string,\r\n    blockTag: BlockTag = 'latest'\r\n  ): Observable<T> {\r\n    return this.provider.rpc<T>('eth_call', [{ to, data }, blockTag]);\r\n  }\r\n\r\n  /**\r\n   * Send a transaction to the node\r\n   * @param tx The transaction to pass to the node\r\n   * @param blockTag The block to target\r\n   */\r\n  public sendTransaction<T>(\r\n    transaction: Partial<ITxObject>,\r\n    ...rest: any[]\r\n  ): Observable<T> {\r\n    const tx = new TxObject(transaction);\r\n    return this.auth.sendTransaction(tx, rest);\r\n  }\r\n\r\n\r\n  /**\r\n   * Create a RPC request for a subscription\r\n   * @param address The address of the contract\r\n   * @param topics The signature of the event\r\n   */\r\n  public event(\r\n    address: string,\r\n    topics: string[]\r\n  ): Observable<TxLogs> {\r\n    return this.provider.rpcSub<TxLogs>(['logs', {address, topics}]).pipe(\r\n      map(logs => new TxLogs(logs))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Estimate the amount of gas needed for transaction\r\n   * @param transaction The transaction to estimate the gas from\r\n   */\r\n  public estimateGas(transaction: Partial<ITxObject>): Observable<number> {\r\n    const tx = new TxObject(transaction);\r\n    return this.provider.rpc<string>('eth_estimateGas', [tx]).pipe(\r\n      map(gas => hexToNumber(gas.replace('0x', '')))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the current price per gas in wei\r\n   */\r\n  public gasPrice(): Observable<string> {\r\n    return this.provider.rpc<string>('eth_gasPrice', []).pipe(\r\n      map(price => hexToNumberString(price.replace('0x', '')))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { numberToHex, Block, Transaction, TxReceipt, toBN } from '@ngeth/utils';\r\nimport { ProvidersModule } from '../providers.module'\r\nimport { MainProvider } from '../provider';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({ providedIn : ProvidersModule })\r\nexport class Eth {\r\n\r\n  constructor(private provider: MainProvider) {}\r\n\r\n  public getBlockNumber(): Observable<string> {\r\n    return this.provider\r\n      .rpc<string>('eth_blockNumber')\r\n      .pipe(map(block => toBN(block).toString(10)));;\r\n  }\r\n\r\n  public getGasPrice(): Observable<number> {\r\n    return this.provider\r\n      .rpc<number>('eth_gasPrice')\r\n      .pipe(map(block => toBN(block).toString(10)));\r\n  }\r\n\r\n  /******\r\n   * BLOCK\r\n   */\r\n  public getBlockByNumber(blockNumber): Observable<any> {\r\n    const isNumber = typeof blockNumber === 'number';\r\n    const params = isNumber ? numberToHex(blockNumber) : blockNumber;\r\n    return this.provider\r\n      .rpc<any>('eth_getBlockByNumber', [params, true])\r\n      .pipe(map(block => (block ? new Block(block) : null)));\r\n  }\r\n\r\n  public getBlockByHash(blockHash: string): Observable<any> {\r\n    return this.provider\r\n      .rpc<any>('eth_getBlockByNumber', [blockHash, true])\r\n      .pipe(map(block => (block ? new Block(block) : null)));\r\n  }\r\n\r\n  /*************\r\n   * TRANSACTION\r\n   */\r\n  public getTransaction(transactionHash: string): Observable<any> {\r\n    return this.provider\r\n      .rpc<number>('eth_getTransactionByHash', [transactionHash])\r\n      .pipe(map(tx => (tx ? new Transaction(tx) : null)));\r\n  }\r\n\r\n  public getTransactionReceipt(transactionHash: string): Observable<any> {\r\n    return this.provider\r\n      .rpc<number>('eth_getTransactionReceipt', [transactionHash])\r\n      .pipe(map(receipt => (receipt ? new TxReceipt(receipt) : null)));\r\n  }\r\n\r\n  /***************\r\n   * SUBSCRIPTIONS\r\n   */\r\n  public onNewBlock() {\r\n    return this.provider.rpcSub(['newHeads']).pipe(\r\n      map(res => new Block(res))\r\n    )\r\n  }\r\n\r\n  public isSyncing() {\r\n    return this.provider.rpcSub(['syncing']);\r\n  }\r\n}\r\n"],"names":["tap","map","InjectionToken","APP_INITIALIZER","NgModule","HttpClientModule","filter","first","WebSocketSubject","w3cwebsocket","switchMap","Injectable","BehaviorSubject","toChecksumAddress","utf8ToHex","tslib_1.__extends","http","bindNodeCallback","HttpClient","TxObject","TxLogs","hexToNumber","hexToNumberString","Inject","toBN","numberToHex","Block","Transaction","TxReceipt"],"mappings":"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"}
