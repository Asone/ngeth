{"version":3,"file":"ngeth-wallet.umd.js.map","sources":["ng://@ngeth/wallet/lib/wallet.module.ts","ng://@ngeth/wallet/lib/signature/rlp.ts",null,"ng://@ngeth/wallet/lib/signature/signer.ts","ng://@ngeth/wallet/lib/account/encryption.ts","ng://@ngeth/wallet/lib/account/account.ts","ng://@ngeth/wallet/lib/wallet.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n@NgModule()\nexport class WalletModule {}\n","import { Injectable } from '@angular/core';\r\nimport { WalletModule } from '../wallet.module';\r\nimport * as assert from 'assert';\r\nimport { Buffer } from 'buffer';\r\n\r\n/**\r\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\r\n * This private takes in a data, convert it to buffer if not, and a length for recursion\r\n *\r\n * @param data - will be converted to buffer\r\n * @returns  - returns buffer of encoded data\r\n **/\r\n@Injectable({ providedIn: WalletModule })\r\nexport class RLP {\r\n  public encode(input: Buffer | string | number | Array<any>) {\r\n    if (input instanceof Array) {\r\n      const output = []\r\n      for (let i = 0; i < input.length; i++) {\r\n        output.push(this.encode(input[i]))\r\n      }\r\n      const buf = Buffer.concat(output)\r\n      return Buffer.concat([this.encodeLength(buf.length, 192), buf])\r\n    } else {\r\n      input = this.toBuffer(input);\r\n      if (input.length === 1 && input[0] < 128) {\r\n        return input\r\n      } else {\r\n        return Buffer.concat([this.encodeLength(input.length, 128), input])\r\n      }\r\n    }\r\n  }\r\n\r\n  private safeParseInt (v, base) {\r\n    if (v.slice(0, 2) === '00') {\r\n      throw (new Error('invalid RLP: extra zeros'))\r\n    }\r\n    return parseInt(v, base)\r\n  }\r\n\r\n  private encodeLength (len, offset) {\r\n    if (len < 56) {\r\n      return Buffer.from([len + offset])\r\n    } else {\r\n      const hexLength = this.intToHex(len)\r\n      const lLength = hexLength.length / 2\r\n      const firstByte = this.intToHex(offset + 55 + lLength)\r\n      return Buffer.from(firstByte + hexLength, 'hex')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/RLP}\r\n   * @param data - will be converted to buffer\r\n   * @returns - returns decode Array of Buffers containg the original message\r\n   **/\r\n  public decode(input: Buffer | string, stream?: boolean): Buffer | Array<any> {\r\n    if (!input || input.length === 0) {\r\n      return Buffer.from([]);\r\n    }\r\n\r\n    input = this.toBuffer(input);\r\n    const decoded = this._decode(input);\r\n\r\n    if (stream) {\r\n      return decoded as any;\r\n    }\r\n\r\n    assert.equal(decoded.remainder.length, 0, 'invalid remainder');\r\n    return decoded.data;\r\n  }\r\n\r\n  public getLength(input: string | Buffer): number | Buffer {\r\n    if (!input || input.length === 0) {\r\n      return Buffer.from([])\r\n    }\r\n\r\n    input = this.toBuffer(input)\r\n    const firstByte = input[0]\r\n    if (firstByte <= 0x7f) {\r\n      return input.length\r\n    } else if (firstByte <= 0xb7) {\r\n      return firstByte - 0x7f\r\n    } else if (firstByte <= 0xbf) {\r\n      return firstByte - 0xb6\r\n    } else if (firstByte <= 0xf7) {\r\n      // a list between  0-55 bytes long\r\n      return firstByte - 0xbf\r\n    } else {\r\n      // a list  over 55 bytes long\r\n      const llength = firstByte - 0xf6\r\n      const length = this.safeParseInt(input.slice(1, llength).toString('hex'), 16)\r\n      return llength + length\r\n    }\r\n  }\r\n\r\n  private _decode (input: Buffer) {\r\n    let length, llength, data, innerRemainder, d;\r\n    const decoded = []\r\n    const firstByte = input[0]\r\n\r\n    if (firstByte <= 0x7f) {\r\n      // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\r\n      return {\r\n        data: input.slice(0, 1),\r\n        remainder: input.slice(1)\r\n      }\r\n    } else if (firstByte <= 0xb7) {\r\n      // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\r\n      // The range of the first byte is [0x80, 0xb7]\r\n      length = firstByte - 0x7f\r\n\r\n      // set 0x80 null to 0\r\n      if (firstByte === 0x80) {\r\n        data = Buffer.from([])\r\n      } else {\r\n        data = input.slice(1, length)\r\n      }\r\n\r\n      if (length === 2 && data[0] < 0x80) {\r\n        throw new Error('invalid rlp encoding: byte must be less 0x80')\r\n      }\r\n\r\n      return {\r\n        data: data,\r\n        remainder: input.slice(length)\r\n      }\r\n    } else if (firstByte <= 0xbf) {\r\n      llength = firstByte - 0xb6\r\n      length = this.safeParseInt(input.slice(1, llength).toString('hex'), 16)\r\n      data = input.slice(llength, length + llength)\r\n      if (data.length < length) {\r\n        throw (new Error('invalid RLP'))\r\n      }\r\n\r\n      return {\r\n        data: data,\r\n        remainder: input.slice(length + llength)\r\n      }\r\n    } else if (firstByte <= 0xf7) {\r\n      // a list between  0-55 bytes long\r\n      length = firstByte - 0xbf\r\n      innerRemainder = input.slice(1, length)\r\n      while (innerRemainder.length) {\r\n        d = this._decode(innerRemainder)\r\n        decoded.push(d.data)\r\n        innerRemainder = d.remainder\r\n      }\r\n\r\n      return {\r\n        data: decoded,\r\n        remainder: input.slice(length)\r\n      }\r\n    } else {\r\n      // a list  over 55 bytes long\r\n      llength = firstByte - 0xf6\r\n      length = this.safeParseInt(input.slice(1, llength).toString('hex'), 16)\r\n      const totalLength = llength + length\r\n      if (totalLength > input.length) {\r\n        throw new Error('invalid rlp: total length is larger than the data')\r\n      }\r\n\r\n      innerRemainder = input.slice(llength, totalLength)\r\n      if (innerRemainder.length === 0) {\r\n        throw new Error('invalid rlp, List has a invalid length')\r\n      }\r\n\r\n      while (innerRemainder.length) {\r\n        d = this._decode(innerRemainder)\r\n        decoded.push(d.data)\r\n        innerRemainder = d.remainder\r\n      }\r\n      return {\r\n        data: decoded,\r\n        remainder: input.slice(totalLength)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * HELPERS : TO REMOVE\r\n   */\r\n\r\n  private isHexPrefixed(str): boolean {\r\n    return str.slice(0, 2) === '0x'\r\n  }\r\n\r\n  // Removes 0x from a given String\r\n  private stripHexPrefix(str: string): string {\r\n    if (typeof str !== 'string') {\r\n      return str\r\n    }\r\n    return this.isHexPrefixed(str) ? str.slice(2) : str\r\n  }\r\n\r\n  private intToHex(i: number): string {\r\n    let hex = i.toString(16)\r\n    if (hex.length % 2) {\r\n      hex = '0' + hex\r\n    }\r\n    return hex\r\n  }\r\n\r\n  private padToEven(a: string): string {\r\n    if (a.length % 2) a = '0' + a\r\n    return a\r\n  }\r\n\r\n  private intToBuffer(i: number): Buffer {\r\n    const hex = this.intToHex(i)\r\n    return Buffer.from(hex, 'hex')\r\n  }\r\n\r\n  private toBuffer(v: any): Buffer {\r\n    if (!Buffer.isBuffer(v)) {\r\n      if (typeof v === 'string') {\r\n        if (this.isHexPrefixed(v)) {\r\n          v = Buffer.from(this.padToEven(this.stripHexPrefix(v)), 'hex')\r\n        } else {\r\n          v = Buffer.from(v)\r\n        }\r\n      } else if (typeof v === 'number') {\r\n        if (!v) {\r\n          v = Buffer.from([])\r\n        } else {\r\n          v = this.intToBuffer(v)\r\n        }\r\n      } else if (v === null || v === undefined) {\r\n        v = Buffer.from([])\r\n      } else if (v.toArray) {\r\n        // converts a BN to a Buffer\r\n        v = Buffer.from(v.toArray())\r\n      } else {\r\n        throw new Error('invalid type')\r\n      }\r\n    }\r\n    return v\r\n  }\r\n}\r\n\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TxObject, keccak256, isHexStrict, hexToBytes } from '@ngeth/utils';\r\nimport { WalletModule } from './../wallet.module';\r\nimport { RLP } from './rlp';\r\nimport { Buffer } from 'buffer';\r\nimport { sign } from 'secp256k1';\r\n\r\n\r\n@Injectable({ providedIn: WalletModule })\r\nexport class Signer {\r\n\r\n  constructor(private rlp: RLP) {}\r\n\r\n  /**\r\n   * Sign a raw transaction\r\n   * @param privateKey The private key to sign the transaction with\r\n   * @param tx The transaction to sign\r\n   * @param chainId The id of the chain\r\n   */\r\n  public signTx(privateKey: string, tx: TxObject, chainId?: number) {\r\n    // Format TX\r\n    const rawTx = this.rawTx(tx);\r\n    const rawChain = [ '0x' + (chainId || 1).toString(16), '0x', '0x' ];\r\n\r\n    // RLP encode with chainId (EIP155: prevent replay attack)\r\n    const rlpEncoded = this.rlp.encode([...rawTx, ...rawChain]);\r\n\r\n    // Hash\r\n    const messageHash = keccak256(rlpEncoded);\r\n\r\n    // Sign\r\n    const { r, s, v } = this.sign(privateKey, messageHash, chainId);\r\n\r\n    // RLP Encode with signature\r\n    const rlpTx = this.rlp.encode([...rawTx, ...[v, r, s]]);\r\n    const rawTransaction = '0x' +  rlpTx.toString('hex');\r\n\r\n    return { messageHash, r, s, v, rawTransaction };\r\n  }\r\n\r\n  /**\r\n   * Recover a transaction based on its raw value\r\n   * @param rawTx The raw transaction format\r\n   */\r\n  public recoverTx(rawTx: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Format the transaction\r\n   * @param tx The Transaction to encode\r\n   */\r\n  private rawTx(tx: TxObject): any[] {\r\n    return [\r\n      '0x' + (tx.nonce || ''),\r\n      '0x' + (tx.gasPrice || ''),\r\n      '0x' + (tx.gas || ''),\r\n      '0x' + tx.to.toLowerCase().replace('0x', '') || '',\r\n      '0x' + (tx.value || ''),\r\n      '0x' + (tx.data || '')\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Sign a hash\r\n   * @param privateKey The private key needed to sign the hash\r\n   * @param hash The hash to sign\r\n   * @param chainId The Id of the chain\r\n    */\r\n  public sign(privateKey: string, hash: string, chainId?: number) {\r\n    const privKey = Buffer.from(privateKey.replace('0x', ''), 'hex');\r\n    const data = Buffer.from(hash.replace('0x', ''), 'hex');\r\n    const addToV = (chainId && chainId > 0) ? chainId * 2 + 8 : 0;\r\n    const { signature, recovery } = sign(data, privKey);\r\n    const r = signature.toString('hex', 0, 32);\r\n    const s = signature.toString('hex', 32, 64);\r\n    const v = (recovery + 27 + addToV).toString(16);\r\n    return {\r\n      r: '0x'+r,\r\n      s: '0x'+s,\r\n      v: '0x'+v,\r\n      signature: `0x${r}${s}${v}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Hash a message with the preamble \"\\x19Ethereum Signed Message:\\n\"\r\n   * @param message The message to sign\r\n   */\r\n  public hashMessage(message: string): string {\r\n    const msg = isHexStrict(message) ? message : hexToBytes(message);\r\n    const msgBuffer = Buffer.from(msg as string);\r\n    const preamble = '\\x19Ethereum Signed Message:\\n' + msg.length;\r\n    const preambleBuffer = Buffer.from(preamble);\r\n    const ethMsg = Buffer.concat([preambleBuffer, msgBuffer]);\r\n    return keccak256(ethMsg);\r\n  }\r\n}\r\n","import { randomBytes } from 'crypto-browserify';\r\n\r\nexport class EncryptOptions {\r\n  public salt: Buffer | string = randomBytes(32);\r\n  public iv: Buffer = randomBytes(16);\r\n  public kdf: 'pbkdf2' | 'scrypt' = 'scrypt';\r\n  public c = 262144;\r\n  public prf: 'hmac-sha256';\r\n  public dklen = 32;\r\n  public n: 2048 | 4096 | 8192 | 16384 = 8192;\r\n  public r = 8;\r\n  public p = 1;\r\n  public cipher: 'aes-128-ctr' | string = 'aes-128-ctr';\r\n  public uuid: Buffer = randomBytes(16);\r\n  constructor(options?: Partial<EncryptOptions>) {\r\n    for (const key in options) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = options[key];\r\n      }\r\n    }\r\n    // Transform salt to be a Buffer\r\n    if (options && typeof options.salt === 'string') {\r\n      this.salt = Buffer.from(options.salt.replace('0x', ''), 'hex')\r\n    }\r\n  }\r\n}\r\n\r\nexport interface Keystore {\r\n  version: 3;\r\n  id: string;\r\n  address: string;\r\n  crypto: {\r\n    ciphertext: string;\r\n    cipherparams: {\r\n        iv: string;\r\n    },\r\n    cipher: string;\r\n    kdf: string;\r\n    kdfparams: {\r\n      dklen: number;\r\n      salt: string;\r\n      // For scrypt encryption\r\n      n?: number;\r\n      p?: number;\r\n      r?: number;\r\n      // For pbkdf2 encryption\r\n      c?: number;\r\n      prf?: 'hmac-sha256';\r\n    };\r\n    mac: string;\r\n  }\r\n}\r\n","/**\r\n * Ressources\r\n * https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { WalletModule } from './../wallet.module';\r\n\r\nimport { v4 } from 'uuid';\r\nimport { toChecksumAddress, keccak256 } from '@ngeth/utils';\r\nimport { privateKeyVerify, publicKeyCreate } from 'secp256k1';\r\nimport { randomBytes, pbkdf2Sync, createCipheriv, createDecipheriv } from 'crypto-browserify';\r\nimport { EncryptOptions, Keystore } from './encryption';\r\nimport scryptsy from 'scrypt.js';\r\n\r\nexport interface EthAccount {\r\n  privateKey: string;\r\n  address: string;\r\n}\r\n\r\n\r\n@Injectable({providedIn: WalletModule})\r\nexport class Accounts {\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Create an Ethereum keypair\r\n   */\r\n  public create(): EthAccount {\r\n    let privKey: Buffer;\r\n    do { privKey = randomBytes(32); }\r\n    while (!privateKeyVerify(privKey));\r\n    return this.fromPrivate(privKey);\r\n  }\r\n\r\n  /**\r\n   * Create an account from a private key\r\n   * @param privateKey The private key without the prefix '0x'\r\n   */\r\n  public fromPrivate(privateKey: string | Buffer): EthAccount {\r\n    if (typeof privateKey === 'string') {\r\n      privateKey = Buffer.from([privateKey.replace('0x', '')]);\r\n    }\r\n    // Slice(1) is to drop type byte which is hardcoded as 04 ethereum.\r\n    const pubKey = publicKeyCreate(privateKey, false).slice(1);\r\n    const address = '0x' + keccak256(pubKey).substring(26);\r\n    return {\r\n      privateKey: '0x' + privateKey.toString('hex'),\r\n      address: toChecksumAddress(address)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Encrypt an private key into a keystore\r\n   * @param privateKey The private key to encrypt\r\n   * @param password The password to encrypt the private key with\r\n   * @param encryptOptions A list of options to encrypt the private key\r\n   * Code from : https://github.com/ethereum/web3.js/blob/1.0/packages/web3-eth-accounts/src/index.js\r\n   */\r\n  public encrypt(\r\n    privateKey: string,\r\n    password: string,\r\n    encryptOptions?: Partial<EncryptOptions>): Keystore\r\n  {\r\n    const pwd = Buffer.from(password);\r\n    const privKey = Buffer.from(privateKey.replace('0x', ''), 'hex');\r\n    const options = new EncryptOptions(encryptOptions);\r\n    const { salt, iv, kdf, c, n, r, p, dklen, cipher, uuid } = options;\r\n    const kdfParams: Keystore['crypto']['kdfparams'] = {\r\n      dklen: dklen,\r\n      salt: (salt as Buffer).toString('hex')\r\n    };\r\n\r\n    let derivedKey;\r\n    if (kdf === 'pbkdf2') {\r\n      kdfParams.c = c;\r\n      kdfParams.prf = 'hmac-sha256';\r\n      derivedKey = pbkdf2Sync(pwd, salt, c, dklen, 'sha256');\r\n    } else if (kdf === 'scrypt') {\r\n      kdfParams.n = n;\r\n      kdfParams.r = r;\r\n      kdfParams.p = p;\r\n      derivedKey = scryptsy(pwd, salt, n, r, p, dklen);\r\n    } else {\r\n      throw new Error('Unsupported Key Derivation Function' + kdf);\r\n    }\r\n\r\n    const cipherAlg = createCipheriv(cipher, derivedKey.slice(0, 16), iv);\r\n    if (!cipherAlg) { throw new Error('Unsupported cipher ' + cipher)}\r\n    const cipherText = Buffer.concat([cipherAlg.update(privKey), cipherAlg.final()]);\r\n    const toMac = Buffer.concat([derivedKey.slice(16, 32), cipherText]);\r\n    const mac = keccak256(toMac).replace('0x', '');\r\n    return {\r\n      version: 3,\r\n      id: v4({ random: uuid as any }),\r\n      address: this.fromPrivate(privKey).address.toLowerCase().replace('0x', ''),\r\n      crypto: {\r\n        ciphertext: cipherText.toString('hex'),\r\n        cipherparams: {\r\n            iv: iv.toString('hex')\r\n        },\r\n        cipher: options.cipher,\r\n        kdf: kdf,\r\n        kdfparams: kdfParams,\r\n        mac: mac\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decrypt a keystore object\r\n   * @param keystore The keystore object\r\n   * @param password The password to decrypt the keystore with\r\n   * Code from : https://github.com/ethereumjs/ethereumjs-wallet/blob/master/index.js\r\n   */\r\n  public decrypt(keystore: Keystore, password: string): EthAccount {\r\n    if (typeof password !== 'string') { throw new Error('No password provided'); }\r\n    if (typeof keystore !== 'object') { throw new Error('keystore should be an object'); }\r\n    if (keystore.version !== 3) { throw new Error('Not a V3 wallet'); }\r\n\r\n    let derivedKey;\r\n    const { kdf, kdfparams, cipherparams, cipher } = keystore.crypto;\r\n    const pwd = Buffer.from(password, 'utf8');\r\n    const salt = Buffer.from(kdfparams.salt, 'hex');\r\n    const iv = Buffer.from(cipherparams.iv, 'hex');\r\n    // Scrypt encryption\r\n    if (kdf === 'scrypt') {\r\n      const { n, r, p, dklen } = kdfparams;\r\n      derivedKey = scryptsy(pwd, salt, n, r, p, dklen)\r\n    }\r\n    // pbkdf2 encryption\r\n    else if (kdf === 'pbkdf2') {\r\n      if (kdfparams.prf !== 'hmac-sha256') { throw new Error('Unsupported parameters to PBKDF2'); }\r\n      const { c, dklen } = kdfparams;\r\n      derivedKey = pbkdf2Sync(pwd, salt, c, dklen, 'sha256')\r\n    } else {\r\n      throw new Error('Unsupported key derivation scheme')\r\n    }\r\n\r\n    const cipherText = Buffer.from(keystore.crypto.ciphertext, 'hex');\r\n    const mac = keccak256(Buffer.concat([ derivedKey.slice(16, 32), cipherText ]))\r\n                  .replace('0x', '');\r\n\r\n    if (mac !== keystore.crypto.mac) {\r\n      throw new Error('Key derivation failed - possibly wrong password')\r\n    }\r\n\r\n    const decipher = createDecipheriv(cipher, derivedKey.slice(0, 16), iv);\r\n    const seed = Buffer.concat([ decipher.update(cipherText), decipher.final() ]);\r\n\r\n    return this.fromPrivate(seed);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProvidersModule, MainProvider, Auth } from '@ngeth/provider';\r\nimport { TxObject, toChecksumAddress, checkAddressChecksum } from '@ngeth/utils';\r\n\r\nimport { Accounts, EncryptOptions, Keystore, EthAccount } from './account';\r\nimport { Signer } from './signature/signer';\r\n\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface KeystoreMap {\r\n  [address: string]: Keystore;\r\n}\r\n\r\n@Injectable({ providedIn: ProvidersModule})\r\nexport class Wallet implements Auth {\r\n  private localKeystore = new BehaviorSubject<KeystoreMap>(null);\r\n  private currentAccount = new BehaviorSubject<string>(null);\r\n  public keystores$ = this.localKeystore.asObservable();\r\n  public account$ = this.currentAccount.asObservable();\r\n\r\n  constructor(\r\n    private provider: MainProvider,\r\n    private signer: Signer,\r\n    private accounts: Accounts\r\n  ) {\r\n    this.localKeystore.next(this.getKeystoreMapFromLocalStorage());\r\n  }\r\n\r\n  /** Get the default account */\r\n  get defaultAccount(): string {\r\n    return this.currentAccount.getValue();\r\n  }\r\n\r\n  /** Set the default account */\r\n  set defaultAccount(account: string) {\r\n    this.currentAccount.next(toChecksumAddress(account));\r\n  }\r\n\r\n  /** Return the keystore map from the localstore */\r\n  private getKeystoreMapFromLocalStorage(): KeystoreMap {\r\n    return new Array(localStorage.length).fill(null)\r\n      .reduce((keyMap: KeystoreMap, none: null, i: number) => {\r\n        const key = localStorage.key(i);\r\n        return checkAddressChecksum(key)\r\n          ? {...keyMap, [key]: this.getKeystore(key) }\r\n          : {...keyMap};\r\n      }, {});\r\n  }\r\n\r\n  /**\r\n   * Get a specific keystore depending on its address\r\n   * @param address The address of the keystore\r\n   */\r\n  public getKeystore(address: string): Keystore {\r\n    const checkSum = toChecksumAddress(address);\r\n    return JSON.parse(localStorage.getItem(checkSum));\r\n  }\r\n\r\n  /** Return the list of addresses available in the localStorage */\r\n  public getAccounts(): Observable<string[]> {\r\n    return this.keystores$.pipe(map(keyMap => Object.keys(keyMap)));\r\n  }\r\n\r\n\r\n  /**\r\n   * Create an account\r\n   */\r\n  public create() {\r\n    return this.accounts.create();\r\n  }\r\n\r\n  /**\r\n   * Save an account into the localstorage\r\n   * @param account The key pair account\r\n   * @param password The password to encrypt the account with\r\n   */\r\n  public save(account: EthAccount, password: string) {\r\n    const { address, privateKey } = account;\r\n    const keystore = this.encrypt(privateKey, password);\r\n    // Update allKeystore\r\n    localStorage.setItem(address, JSON.stringify(keystore));\r\n    this.localKeystore.next(this.getKeystoreMapFromLocalStorage());\r\n  }\r\n\r\n  /**\r\n   * Encrypt an private key into a keystore\r\n   * @param privateKey The private key to encrypt\r\n   * @param password The password to encrypt the private key with\r\n   * @param options A list of options to encrypt the private key\r\n   */\r\n  public encrypt(privateKey: string, password: string, options?: Partial<EncryptOptions>) {\r\n    return this.accounts.encrypt(privateKey, password, options);\r\n  }\r\n\r\n  /**\r\n   * Decrypt a keystore object\r\n   * @param keystore The keystore object\r\n   * @param password The password to decrypt the keystore with\r\n   */\r\n  public decrypt(keystore: Keystore, password: string) {\r\n    return this.accounts.decrypt(keystore, password);\r\n  }\r\n\r\n  /*************\r\n   * TRANSACTION\r\n   *************/\r\n\r\n  /**\r\n   * Send a transaction by signing it\r\n   * @param tx The transaction to send\r\n   * @param privateKey The private key to sign the transaction with\r\n   */\r\n  public sendTransaction(tx: TxObject, privateKey: string) {\r\n    const { rawTransaction } = this.signTx(tx, privateKey);\r\n    return this.sendRawTransaction(rawTransaction);\r\n  }\r\n\r\n  /**\r\n   * Send a transaction to the node\r\n   * @param rawTx The signed transaction data.\r\n   */\r\n  public sendRawTransaction(rawTx: string): Observable<string> {\r\n    return this.provider.rpc<string>('eth_sendRawTransaction', [rawTx]);\r\n  }\r\n\r\n  /**\r\n   * Sign a transaction with a private key\r\n   * @param tx The transaction to sign\r\n   * @param privateKey The private key to sign the transaction with\r\n   */\r\n  public signTx(tx: TxObject, privateKey: string) {\r\n    return this.signer.signTx(privateKey, tx, this.provider.id);\r\n  }\r\n\r\n  /***********\r\n   * SIGNATURE\r\n   */\r\n\r\n  /**\r\n   * Sign a message\r\n   * @param message the message to sign\r\n   * @param address the address to sign the message with\r\n   * @param password the password needed to decrypt the private key\r\n   */\r\n  public sign(message: string, address: string, password: string) {\r\n    return this.keystores$.pipe(\r\n      map(keystores => keystores[address]),\r\n      map(keystore => this.decrypt(keystore, password)),\r\n      map(ethAccount => this.signMessage(message, ethAccount.privateKey))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sign a message with the private key\r\n   * @param message The message to sign\r\n   * @param privateKey The private key to sign the message with\r\n   */\r\n  public signMessage(message: string, privateKey: string) {\r\n    const messageHash = this.signer.hashMessage(message);\r\n    const {r, s, v, signature} = this.signer.sign(privateKey, messageHash);\r\n    return {message, messageHash, v, r, s, signature};\r\n  }\r\n\r\n}\r\n"],"names":["NgModule","Buffer","assert.equal","Injectable","keccak256","isHexStrict","hexToBytes","randomBytes","privateKeyVerify","publicKeyCreate","toChecksumAddress","uuid","pbkdf2Sync","createCipheriv","v4","createDecipheriv","BehaviorSubject","checkAddressChecksum","map","ProvidersModule","MainProvider"],"mappings":";;;;;;;;;;;;AAAA;;;;oBACCA,WAAQ;;2BADT;;;;;;;ACAA;;;;;;;;;;;;;;;QAcS,oBAAM;;;;sBAAC,KAA4C;gBACxD,IAAI,KAAK,YAAY,KAAK,EAAE;oBAC1B,qBAAM,MAAM,GAAG,EAAE,CAAA;oBACjB,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;qBACnC;oBACD,qBAAM,GAAG,GAAGC,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;oBACjC,OAAOA,aAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;iBAChE;qBAAM;oBACL,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC7B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;wBACxC,OAAO,KAAK,CAAA;qBACb;yBAAM;wBACL,OAAOA,aAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA;qBACpE;iBACF;;;;;;;QAGK,0BAAY;;;;;sBAAE,CAAC,EAAE,IAAI;gBAC3B,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;oBAC1B,OAAO,IAAI,KAAK,CAAC,0BAA0B,CAAC,EAAC;iBAC9C;gBACD,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;;;;;;;QAGlB,0BAAY;;;;;sBAAE,GAAG,EAAE,MAAM;gBAC/B,IAAI,GAAG,GAAG,EAAE,EAAE;oBACZ,OAAOA,aAAM,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAA;iBACnC;qBAAM;oBACL,qBAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;oBACpC,qBAAM,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAA;oBACpC,qBAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,GAAG,OAAO,CAAC,CAAA;oBACtD,OAAOA,aAAM,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE,KAAK,CAAC,CAAA;iBACjD;;;;;;;;;QAQI,oBAAM;;;;;;;sBAAC,KAAsB,EAAE,MAAgB;gBACpD,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBAChC,OAAOA,aAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACxB;gBAED,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC7B,qBAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAEpC,IAAI,MAAM,EAAE;oBACV,yBAAO,OAAc,EAAC;iBACvB;gBAEDC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAC;gBAC/D,OAAO,OAAO,CAAC,IAAI,CAAC;;;;;;QAGf,uBAAS;;;;sBAAC,KAAsB;gBACrC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBAChC,OAAOD,aAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;iBACvB;gBAED,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;gBAC5B,qBAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;gBAC1B,IAAI,SAAS,IAAI,IAAI,EAAE;oBACrB,OAAO,KAAK,CAAC,MAAM,CAAA;iBACpB;qBAAM,IAAI,SAAS,IAAI,IAAI,EAAE;oBAC5B,OAAO,SAAS,GAAG,IAAI,CAAA;iBACxB;qBAAM,IAAI,SAAS,IAAI,IAAI,EAAE;oBAC5B,OAAO,SAAS,GAAG,IAAI,CAAA;iBACxB;qBAAM,IAAI,SAAS,IAAI,IAAI,EAAE;;oBAE5B,OAAO,SAAS,GAAG,IAAI,CAAA;iBACxB;qBAAM;;oBAEL,qBAAM,OAAO,GAAG,SAAS,GAAG,IAAI,CAAA;oBAChC,qBAAM,QAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAA;oBAC7E,OAAO,OAAO,GAAG,QAAM,CAAA;iBACxB;;;;;;QAGK,qBAAO;;;;sBAAE,KAAa;gBAC5B,qBAAI,MAAM,mBAAE,OAAO,mBAAE,IAAI,mBAAE,cAAc,mBAAE,CAAC,CAAC;gBAC7C,qBAAM,OAAO,GAAG,EAAE,CAAA;gBAClB,qBAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;gBAE1B,IAAI,SAAS,IAAI,IAAI,EAAE;;oBAErB,OAAO;wBACL,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;wBACvB,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;qBAC1B,CAAA;iBACF;qBAAM,IAAI,SAAS,IAAI,IAAI,EAAE;;;oBAG5B,MAAM,GAAG,SAAS,GAAG,IAAI,CAAA;;oBAGzB,IAAI,SAAS,KAAK,IAAI,EAAE;wBACtB,IAAI,GAAGA,aAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;qBACvB;yBAAM;wBACL,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;qBAC9B;oBAED,IAAI,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;wBAClC,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAA;qBAChE;oBAED,OAAO;wBACL,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;qBAC/B,CAAA;iBACF;qBAAM,IAAI,SAAS,IAAI,IAAI,EAAE;oBAC5B,OAAO,GAAG,SAAS,GAAG,IAAI,CAAA;oBAC1B,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAA;oBACvE,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,GAAG,OAAO,CAAC,CAAA;oBAC7C,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE;wBACxB,OAAO,IAAI,KAAK,CAAC,aAAa,CAAC,EAAC;qBACjC;oBAED,OAAO;wBACL,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;qBACzC,CAAA;iBACF;qBAAM,IAAI,SAAS,IAAI,IAAI,EAAE;;oBAE5B,MAAM,GAAG,SAAS,GAAG,IAAI,CAAA;oBACzB,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;oBACvC,OAAO,cAAc,CAAC,MAAM,EAAE;wBAC5B,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;wBAChC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;wBACpB,cAAc,GAAG,CAAC,CAAC,SAAS,CAAA;qBAC7B;oBAED,OAAO;wBACL,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;qBAC/B,CAAA;iBACF;qBAAM;;oBAEL,OAAO,GAAG,SAAS,GAAG,IAAI,CAAA;oBAC1B,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAA;oBACvE,qBAAM,WAAW,GAAG,OAAO,GAAG,MAAM,CAAA;oBACpC,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,EAAE;wBAC9B,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAA;qBACrE;oBAED,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;oBAClD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/B,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAA;qBAC1D;oBAED,OAAO,cAAc,CAAC,MAAM,EAAE;wBAC5B,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;wBAChC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;wBACpB,cAAc,GAAG,CAAC,CAAC,SAAS,CAAA;qBAC7B;oBACD,OAAO;wBACL,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;qBACpC,CAAA;iBACF;;;;;;;QAQK,2BAAa;;;;;sBAAC,GAAG;gBACvB,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAA;;;;;;QAIzB,4BAAc;;;;sBAAC,GAAW;gBAChC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;oBAC3B,OAAO,GAAG,CAAA;iBACX;gBACD,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;;;;;;QAG7C,sBAAQ;;;;sBAAC,CAAS;gBACxB,qBAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;gBACxB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;iBAChB;gBACD,OAAO,GAAG,CAAA;;;;;;QAGJ,uBAAS;;;;sBAAC,CAAS;gBACzB,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;oBAAE,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;gBAC7B,OAAO,CAAC,CAAA;;;;;;QAGF,yBAAW;;;;sBAAC,CAAS;gBAC3B,qBAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC5B,OAAOA,aAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;;;;;;QAGxB,sBAAQ;;;;sBAAC,CAAM;gBACrB,IAAI,CAACA,aAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACvB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;wBACzB,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;4BACzB,CAAC,GAAGA,aAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;yBAC/D;6BAAM;4BACL,CAAC,GAAGA,aAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;yBACnB;qBACF;yBAAM,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;wBAChC,IAAI,CAAC,CAAC,EAAE;4BACN,CAAC,GAAGA,aAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;yBACpB;6BAAM;4BACL,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;yBACxB;qBACF;yBAAM,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,EAAE;wBACxC,CAAC,GAAGA,aAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;qBACpB;yBAAM,IAAI,CAAC,CAAC,OAAO,EAAE;;wBAEpB,CAAC,GAAGA,aAAM,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;qBAC7B;yBAAM;wBACL,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;qBAChC;iBACF;gBACD,OAAO,CAAC,CAAA;;;oBAhOXE,aAAU,SAAC,EAAE,UAAU,EAAE,YAAY,EAAE;;;kBAZxC;;;ICAA;;;;;;;;;;;;;;AAcA,IAYO,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC;QACtD,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF;QACD,OAAO,CAAC,CAAC;IACb,CAAC,CAAA;AAED,oBA6EuB,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;AAED;QACI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;;;;;;;QCzHC,gBAAoB,GAAQ;YAAR,QAAG,GAAH,GAAG,CAAK;SAAI;;;;;;;;QAQzB,uBAAM;;;;;;;sBAAC,UAAkB,EAAE,EAAY,EAAE,OAAgB;;gBAE9D,qBAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC7B,qBAAM,QAAQ,GAAG,CAAE,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;;gBAGpE,qBAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,UAAK,KAAK,EAAK,QAAQ,EAAE,CAAC;;gBAG5D,qBAAM,WAAW,GAAGC,eAAS,CAAC,UAAU,CAAC,CAAC;;gBAG1C,sDAAQ,QAAC,EAAE,QAAC,EAAE,QAAC,CAAiD;;gBAGhE,qBAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,UAAK,KAAK,EAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;gBACxD,qBAAM,cAAc,GAAG,IAAI,GAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAErD,OAAO,EAAE,WAAW,aAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,cAAc,gBAAA,EAAE,CAAC;;;;;;;QAO3C,0BAAS;;;;;sBAAC,KAAa;;;;;;;QAQtB,sBAAK;;;;;sBAAC,EAAY;gBACxB,OAAO;oBACL,IAAI,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;oBACvB,IAAI,IAAI,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC;oBAC1B,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC;oBACrB,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;oBAClD,IAAI,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;oBACvB,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;iBACvB,CAAC;;;;;;;;;QASG,qBAAI;;;;;;;sBAAC,UAAkB,EAAE,IAAY,EAAE,OAAgB;gBAC5D,qBAAM,OAAO,GAAGH,aAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBACjE,qBAAM,IAAI,GAAGA,aAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBACxD,qBAAM,MAAM,GAAG,CAAC,OAAO,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9D,wCAAQ,wBAAS,EAAE,sBAAQ,CAAyB;gBACpD,qBAAM,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC3C,qBAAM,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC5C,qBAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChD,OAAO;oBACL,CAAC,EAAE,IAAI,GAAC,CAAC;oBACT,CAAC,EAAE,IAAI,GAAC,CAAC;oBACT,CAAC,EAAE,IAAI,GAAC,CAAC;oBACT,SAAS,EAAE,OAAK,CAAC,GAAG,CAAC,GAAG,CAAG;iBAC5B,CAAC;;;;;;;QAOG,4BAAW;;;;;sBAAC,OAAe;gBAChC,qBAAM,GAAG,GAAGI,iBAAW,CAAC,OAAO,CAAC,GAAG,OAAO,GAAGC,gBAAU,CAAC,OAAO,CAAC,CAAC;gBACjE,qBAAM,SAAS,GAAGL,aAAM,CAAC,IAAI,mBAAC,GAAa,EAAC,CAAC;gBAC7C,qBAAM,QAAQ,GAAG,gCAAgC,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC/D,qBAAM,cAAc,GAAGA,aAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7C,qBAAM,MAAM,GAAGA,aAAM,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;gBAC1D,OAAOG,eAAS,CAAC,MAAM,CAAC,CAAC;;;oBAvF5BD,aAAU,SAAC,EAAE,UAAU,EAAE,YAAY,EAAE;;;;;wBAL/B,GAAG;;;;qBAHZ;;;;;;;;;;;;ACAA,IAEA,IAAA;QAYE,wBAAY,OAAiC;wBAXdI,4BAAW,CAAC,EAAE,CAAC;sBAC1BA,4BAAW,CAAC,EAAE,CAAC;uBACD,QAAQ;qBAC/B,MAAM;yBAEF,EAAE;qBACsB,IAAI;qBAChC,CAAC;qBACD,CAAC;0BAC4B,aAAa;wBAC/BA,4BAAW,CAAC,EAAE,CAAC;YAEnC,KAAK,qBAAM,GAAG,IAAI,OAAO,EAAE;gBACzB,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;iBAC1B;aACF;;YAED,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC/C,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;aAC/D;SACF;6BAxBH;QAyBC,CAAA;;;;;;;QCDC;SAAgB;;;;;QAKT,yBAAM;;;;;gBACX,qBAAI,OAAe,CAAC;gBACpB,GAAG;oBAAE,OAAO,GAAGA,4BAAW,CAAC,EAAE,CAAC,CAAC;iBAAE,QAC1B,CAACC,0BAAgB,CAAC,OAAO,CAAC,EAAE;gBACnC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;;;;;;QAO5B,8BAAW;;;;;sBAAC,UAA2B;gBAC5C,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;oBAClC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC1D;;gBAED,qBAAM,MAAM,GAAGC,yBAAe,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3D,qBAAM,OAAO,GAAG,IAAI,GAAGL,eAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACvD,OAAO;oBACL,UAAU,EAAE,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC7C,OAAO,EAAEM,uBAAiB,CAAC,OAAO,CAAC;iBACpC,CAAC;;;;;;;;;;QAUG,0BAAO;;;;;;;;sBACZ,UAAkB,EAClB,QAAgB,EAChB,cAAwC;gBAExC,qBAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAClC,qBAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBACjE,qBAAM,OAAO,GAAG,IAAI,cAAc,CAAC,cAAc,CAAC,CAAC;gBAC3C,IAAA,mBAAI,EAAE,eAAE,EAAE,iBAAG,EAAE,aAAC,EAAE,aAAC,EAAE,aAAC,EAAE,aAAC,EAAE,qBAAK,EAAE,uBAAM,EAAEC,sBAAI,CAAa;gBACnE,qBAAM,SAAS,GAAoC;oBACjD,KAAK,EAAE,KAAK;oBACZ,IAAI,EAAE,EAAC,IAAc,GAAE,QAAQ,CAAC,KAAK,CAAC;iBACvC,CAAC;gBAEF,qBAAI,UAAU,CAAC;gBACf,IAAI,GAAG,KAAK,QAAQ,EAAE;oBACpB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChB,SAAS,CAAC,GAAG,GAAG,aAAa,CAAC;oBAC9B,UAAU,GAAGC,2BAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;iBACxD;qBAAM,IAAI,GAAG,KAAK,QAAQ,EAAE;oBAC3B,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChB,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;iBAClD;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,GAAG,CAAC,CAAC;iBAC9D;gBAED,qBAAM,SAAS,GAAGC,+BAAc,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACtE,IAAI,CAAC,SAAS,EAAE;oBAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,MAAM,CAAC,CAAA;iBAAC;gBAClE,qBAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACjF,qBAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;gBACpE,qBAAM,GAAG,GAAGT,eAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC/C,OAAO;oBACL,OAAO,EAAE,CAAC;oBACV,EAAE,EAAEU,OAAE,CAAC,EAAE,MAAM,oBAAEH,OAAW,CAAA,EAAE,CAAC;oBAC/B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;oBAC1E,MAAM,EAAE;wBACN,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;wBACtC,YAAY,EAAE;4BACV,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;yBACzB;wBACD,MAAM,EAAE,OAAO,CAAC,MAAM;wBACtB,GAAG,EAAE,GAAG;wBACR,SAAS,EAAE,SAAS;wBACpB,GAAG,EAAE,GAAG;qBACT;iBACF,CAAA;;;;;;;;;QASI,0BAAO;;;;;;;sBAAC,QAAkB,EAAE,QAAgB;gBACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAAE,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;iBAAE;gBAC9E,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAAE,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;iBAAE;gBACtF,IAAI,QAAQ,CAAC,OAAO,KAAK,CAAC,EAAE;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;iBAAE;gBAEnE,qBAAI,UAAU,CAAC;gBACf,0BAAQ,YAAG,EAAE,wBAAS,EAAE,8BAAY,EAAE,kBAAM,CAAqB;gBACjE,qBAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBAC1C,qBAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAChD,qBAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;;gBAE/C,IAAI,GAAG,KAAK,QAAQ,EAAE;oBACZ,IAAA,eAAC,EAAE,eAAC,EAAE,eAAC,EAAE,uBAAK,CAAe;oBACrC,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;iBACjD;qBAEI,IAAI,GAAG,KAAK,QAAQ,EAAE;oBACzB,IAAI,SAAS,CAAC,GAAG,KAAK,aAAa,EAAE;wBAAE,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;qBAAE;oBACrF,IAAA,eAAC,EAAE,uBAAK,CAAe;oBAC/B,UAAU,GAAGC,2BAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;iBACvD;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;iBACrD;gBAED,qBAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;gBAClE,qBAAM,GAAG,GAAGR,eAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAE,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAE,CAAC,CAAC;qBAC/D,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAEjC,IAAI,GAAG,KAAK,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE;oBAC/B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;iBACnE;gBAED,qBAAM,QAAQ,GAAGW,iCAAgB,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACvE,qBAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAE,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAE,CAAC,CAAC;gBAE9E,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;;oBAlIjCZ,aAAU,SAAC,EAAC,UAAU,EAAE,YAAY,EAAC;;;;;uBArBtC;;;;;;;;;;;;;QCqBE,gBACU,UACA,QACA;YAFA,aAAQ,GAAR,QAAQ;YACR,WAAM,GAAN,MAAM;YACN,aAAQ,GAAR,QAAQ;iCARM,IAAIa,oBAAe,CAAc,IAAI,CAAC;kCACrC,IAAIA,oBAAe,CAAS,IAAI,CAAC;8BACtC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;4BACnC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;YAOlD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC,CAAC;SAChE;QAGD,sBAAI,kCAAc;;;;;gBAAlB;gBACE,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;aACvC;;;;;;gBAGD,UAAmB,OAAe;gBAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAACN,uBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;;WALA;;;;;QAQO,+CAA8B;;;;;;gBACpC,OAAO,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;qBAC7C,MAAM,CAAC,UAAC,MAAmB,EAAE,IAAU,EAAE,CAAS;oBACjD,qBAAM,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAChC,OAAOO,0BAAoB,CAAC,GAAG,CAAC;uCACxB,MAAM,eAAG,GAAG,IAAG,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,sBACpC,MAAM,CAAC,CAAC;;iBACjB,EAAE,EAAE,CAAC,CAAC;;;;;;;QAOJ,4BAAW;;;;;sBAAC,OAAe;gBAChC,qBAAM,QAAQ,GAAGP,uBAAiB,CAAC,OAAO,CAAC,CAAC;gBAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;QAI7C,4BAAW;;;;;gBAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAACQ,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC,CAAC;;;;;;QAO3D,uBAAM;;;;;gBACX,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;;;;;;;;QAQzB,qBAAI;;;;;;sBAAC,OAAmB,EAAE,QAAgB;gBACvC,IAAA,yBAAO,EAAE,+BAAU,CAAa;gBACxC,qBAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;gBAEpD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC,CAAC;;;;;;;;;QAS1D,wBAAO;;;;;;;sBAAC,UAAkB,EAAE,QAAgB,EAAE,OAAiC;gBACpF,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;;;;;;;;QAQvD,wBAAO;;;;;;sBAAC,QAAkB,EAAE,QAAgB;gBACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;;;;;;;QAY5C,gCAAe;;;;;;sBAAC,EAAY,EAAE,UAAkB;gBAC7C,IAAA,2DAAc,CAAiC;gBACvD,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;;;;;;;QAO1C,mCAAkB;;;;;sBAAC,KAAa;gBACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,wBAAwB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;;;;QAQ/D,uBAAM;;;;;;sBAAC,EAAY,EAAE,UAAkB;gBAC5C,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;;;;;;;;;QAavD,qBAAI;;;;;;;sBAAC,OAAe,EAAE,OAAe,EAAE,QAAgB;;gBAC5D,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACzBA,aAAG,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,OAAO,CAAC,GAAA,CAAC,EACpCA,aAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAA,CAAC,EACjDA,aAAG,CAAC,UAAA,UAAU,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,GAAA,CAAC,CACpE,CAAC;;;;;;;;QAQG,4BAAW;;;;;;sBAAC,OAAe,EAAE,UAAkB;gBACpD,qBAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACrD,oDAAO,QAAC,EAAE,QAAC,EAAE,QAAC,EAAE,wBAAS,CAA8C;gBACvE,OAAO,EAAC,OAAO,SAAA,EAAE,WAAW,aAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,SAAS,WAAA,EAAC,CAAC;;;oBAnJrDf,aAAU,SAAC,EAAE,UAAU,EAAEgB,kBAAe,EAAC;;;;;wBAbhBC,eAAY;wBAI7B,MAAM;wBADN,QAAQ;;;;qBAJjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
